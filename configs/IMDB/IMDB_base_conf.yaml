
random_seed : 1
device: "cuda:0"

data_conf: 
  dataset: "IMDB"
  #dimension: 384
  dimension: 1024
  random_state: 0
  data_path: "../../data/IMDB"
  val_fraction: 0.2
  flatten: False
  num_classes: 2 
  #emb_model: "multi-qa-MiniLM-L6-cos-v1"
  #emb_model: "all-mpnet-base-v2"
  emb_model: "BAAI/bge-large-en"

  compute_emb: False
  emb_path: '../../data/IMDB/embeddings/'
  
  
model_conf:
  model_name: "mlp"
  #input_dimension: 384
  input_dimension: 1024
  #model_name: 'lenet'
  num_classes: 2
  fit_intercept: True
  lib: "pytorch"

training_conf: 
  optimizer: "sgd"
  learning_rate: 0.01
  batch_size: 64
  loss_tolerance: 1e-6
  max_epochs: 20
  normalize_weights: False
  
  
  momentum: 0.9
  weight_decay: 5e-4
  #stopping_criterion: "val_err_threshold"
  #val_err_threshold: 0.05
  log_batch_loss_freq: -1

  ckpt_load_path: None  
  ckpt_save_path: None
  train_from_scratch: True
  train_from_ckpt: False

inference_conf:
  device: "cuda:0"
  shuffle: False
  batch_size: 512

train_pts_query_conf:
  seed_train_size: 1000
  query_batch_size: 500
  query_strategy_name: "margin_random_v2" 
  margin_random_v2_constant: 2
  max_num_train_pts: 10000

val_pts_query_conf:
  query_strategy_name: "random"
  max_num_val_pts : 5000
  
auto_lbl_conf:
  method_name: "selective"  # options "all" | "selective"
  #score_type: "abs_logit"  # options "confidence" | "margin"
  score_type: "confidence"
  class_wise: "independent" # options "joint" | "independent" #makes sense only when using selective 
  auto_label_err_threshold: 0.05 # only for method_name: "selective"
  C_1: 0.05
  ucb: 'sigma'

stopping_criterion: "max_num_train_pts"
store_model_weights_in_mem: False
